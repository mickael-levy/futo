#!/bin/bash

futopath=$HOME/.bin/futo
templates=$futopath/templates

source $futopath/bin/futo-package-init.sh
source $futopath/bin/futo-package-remove.sh
source $futopath/bin/futo-project-init.sh
source $futopath/bin/futo-project-remove.sh

name=$3

case $1 in	
	init)	futo project init $2 --firebase --gitlab;;
	package)		
		case $2 in
			init) futo-package-init $name;;
			remove) futo-package-remove $name;;
		esac
	;;		
  project)
		case $2 in
			init) shift; shift;	futo-project-init $@;;
			remove) futo-project-remove $name;;
		
			### FOR DEV PURPOSES ONLY (Not to create firebase project each time)
			### pages/_app, pages/_document, app/utils/theme, app/utils/firebase, app/utils/index are created programatically & not copied
			### app/layouts, pages/*, next.config.js, vercel.json are copied file by file not as directory
			create)
				shift; shift;
				futo-project-init-pre $@
				futo-project-init-vercel $@
				futo-project-init-material-ui $@
				projectid=$name-$(cat /dev/urandom | tr -dc 'a-z0-9' | fold -w 5 | head -n 1)
				futo-project-init-post-firebase-setup $1 $projectid
				[ ! -d $futopath/dev ] && mkdir $futopath/dev

				echo "Packing the newly created project..."
				tar -czvf $futopath/dev/stage.tar.gz . > /dev/null 
				echo "Finished!"
			;;
			load)	mkdir $name && tar -xzvf $futopath/dev/stage.tar.gz -C $name;;
			finish)
				name=test
				projectid=$FUTOTESTPROJECTID
				futo-project-init-styling
				futo-project-init-post-firebase $name $projectid
			;;
		esac
	;;

esac

i=1
if [ -f "/tmp/futo-$name" ]; then
	while read line; do
		echo
		echo "$i. $line"
		i=$((i+1))
	done < /tmp/futo-$name
	echo
	
	rm /tmp/futo-$name
fi

if [ ! -z $showtemplates ]; then
	find $templates -type f -exec cat {} \; -exec echo \;
	showtemplates=""
fi
