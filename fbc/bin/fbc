#!/bin/zsh

dir=$HOME/.bin/fbc

case $1 in
  rm)
    name=$2

    if projectid=$( fbpid $name ); then
      url="https://console.firebase.google.com/project/$projectid/settings/general"
      echo "To delete project on firebase go to your browser and newly opened link $url"
      open $url
    fi
    
    mui rm $name
    ;;
  *)
    name=$1
    ccname=${${(C)name}//-} # camel case name

    if mui $name; then 
      projectid=$name-$( openssl rand -base64 16 | tr -d "=+/" | cut -c1-5 | tr '[:upper:]' '[:lower:]' )
      cd $name

      ### MINIMAL
      firebase projects:create --non-interactive -n $ccname $projectid 

      url=https://console.firebase.google.com/project/$projectid/settings/general/web
      open $url
      echo
      echo "Hey! To continue Firestore Cloud storage integration go to your chrome browser to newly opened link $url and set Google Cloud Platform (GCP) resource location and public-facing name to $ccname."
      echo
      echo "(Once you are done, close the tab and hit enter to continue)"
      read

      url=https://console.cloud.google.com/datastore/welcome?project=$projectid
      open $url
      echo "Perfect. Now go to your browser to this newly opened link $url and switch Google's Firestore to Native mode. Then wait around 1 minute."
      echo 
      echo "(Once you are done, close the tab and hit enter to continue)"
      read

      $dir/exp/firestore-init $projectid && firebase use $projectid
      # createapp == e.g. "firebase apps:sdkconfig WEB 1:233313016915:web:e6430e12bd463eb6027aa6"
      createapp=$( firebase apps:create WEB $ccname | tail -n1 | awk '{$1=$1};1' ) # awk = trim leading and trailing whitespace

      npm install firebase
      cp $dir/src/app/utils/*.js app/utils/
      $( echo $createapp ) | sed -n '/^firebase/,/^})/p' | sed 's/^/  /' | sed -i '' '/^if (!firebase\.apps\.length)/r /dev/stdin' app/utils/firebase.js
      
      # firestore.rules setup
      cp $dir/src/firestore.rules firestore.rules
      sed -i '' "s/projectid/$projectid/" firestore.rules
      firebase deploy --only firestore:rules

      ## MAIN
      npm install uuid
      cp $dir/src/app/core/*.js app/core/
      cp $dir/src/app/core/form/*.js app/core/form/
      cp $dir/src/pages/*.js pages/ # theme.js because of error handling
      cp $dir/src/public/name.png public/$name.png
      cp -r $dir/src/app/auth app/auth
      cp -r $dir/src/app/layouts app
      cp -r $dir/src/app/locales app/locales
      cp -r $dir/src/app/models app/models # together with posts
      cp -r $dir/src/pages/account pages/ # account pages
      sed -i '' "/^const Header/,/^})/s/name/$name/g" app/core/Header.js
      sed -i '' "s/MyApp/$name/g" app/models/post/PostJoinDialog.js
      
      ### Add AuthProvider
      sed -i '' "s/import { theme } from 'utils'/import { AuthProvider } from 'auth'\n&/" pages/_app.js
      sed -i '' "s/      <ThemeProvider theme={theme}>/      <AuthProvider>\n&/" pages/_app.js
      sed -i '' "s/      <\/ThemeProvider>/&\n      <\/AuthProvider>/" pages/_app.js
      sed -i '' '/<ThemeProvider/,/<\/ThemeProvider/s/^/  /g' pages/_app.js

      echo 
      echo "We are going to enable E-mail/Password authentication, create a compound query for the post feed and set an e-mail template for password reset."
      echo
      
      echo 
      url=https://console.firebase.google.com/project/$projectid/authentication
      echo "(1/3) First, enable authentication by clicking on 'Get Started' on just opened link $url. After that enable E-mail/Password authentication by clicking on 'Email/Password and enabling the first toggle control.'"
      open $url
      echo
      echo "(Once you are done, close the tab and hit enter to continue)"
      read
     
      echo 
      url=https://console.firebase.google.com/project/$projectid/firestore/indexes
      echo "(2/3) To create a compound query necessary for post feed go to newly opened link $url. Click on small link 'Create Index' and the fill out following fields:"
      echo "Collection ID: posts"
      echo "Field #1: profileUsername | Ascending" 
      echo "Field #2: timestamp | Descending"
      echo "Query Scopes: Collection"
      open $url
      echo 
      echo "(Once you are done, close the tab and hit enter to continue)"
      read
      
      echo
      url=https://console.firebase.google.com/project/$projectid/authentication/emails
      echo "(3/3) To set an e-mail template for password reset go to another newly opened link $url, click on 'Password reset' and fill out following fields. Don't forget to change 'Your name' to your name:"
      echo "Sender name: Your name"
      echo "Subject: %APP_NAME% - Reset your password"
      echo "Message:"
      find $dir/templates -type f -exec cat {} \; -exec echo \;
      echo "Action URL: https://$name.vercel.app/account/confirm"
      open $url
      
      echo 
      echo "(Once you are done, close the tab and hit enter to continue)"
      read

      echo
      echo "=== FBC is finished. ==="
      echo
      echo
    else
      exit 1
    fi
    ;;
esac
